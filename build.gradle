plugins {
    id 'fabric-loom' version '1.2-SNAPSHOT'
    id 'maven-publish'
}

repositories {
    // These repositories are only for Gradle plugin lookup, not for project dependencies
    gradlePluginPortal()
    maven {
        name = 'Fabric'
        url = 'https://maven.fabricmc.net/'
    }
    mavenCentral()
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven {
        url = "https://maven.fabricmc.net/"
    }
    mavenCentral()
}

loom {
    splitEnvironmentSourceSets()
    
    mods {
        "fabric-mod-example" {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    
    // HTTP 客户端和 JSON 处理
    implementation 'com.google.code.gson:gson:2.10.1'
}

processResources {
    inputs.property "version", project.version
    
    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
    withSourcesJar()
}

// 设置 sourcesJar 的重复处理策略
sourcesJar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
    
    repositories {
        // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    }
}
